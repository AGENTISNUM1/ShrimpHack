package aids.dev.shrimphack.features.modules.exploit;

import aids.dev.shrimphack.features.modules.Module;
import aids.dev.shrimphack.features.settings.Setting;
import aids.dev.shrimphack.util.World.InvUtils;
import net.minecraft.client.MinecraftClient;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.nbt.NbtList;
import net.minecraft.nbt.NbtString;
import net.minecraft.network.packet.c2s.play.BookUpdateC2SPacket;
import net.minecraft.util.Hand;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

public class iPaperDupe extends Module {
    private final Setting<Integer> delay = this.register(new Setting<>("Delay", 34, 1, 100));
    private int tickCounter = 0;
    private int bookCount = 1;

    public iPaperDupe() {
        super("iPaperDupe", "Automates the iBook dupe exploit", Category.EXPLOIT, true, false, false);
    }

    @Override
    public void onUpdate() {
        MinecraftClient mc = MinecraftClient.getInstance();

        if (tickCounter >= delay.getValue()) {
            dropShulkerBoxes(mc);
            spamBookAndQuill(mc);
            tickCounter = 0;
        }
        tickCounter++;
    }

    private void dropShulkerBoxes(MinecraftClient mc) {
        for (int i = 0; i < mc.player.getInventory().size(); i++) {
            ItemStack stack = mc.player.getInventory().getStack(i);
            if (isShulkerBox(stack)) {
                InvUtils.drop().slot(i);
            }
        }
    }

    private boolean isShulkerBox(ItemStack stack) {
        return stack.getItem() == Items.SHULKER_BOX ||
                stack.getItem() == Items.WHITE_SHULKER_BOX ||
                stack.getItem() == Items.ORANGE_SHULKER_BOX ||
                stack.getItem() == Items.MAGENTA_SHULKER_BOX ||
                stack.getItem() == Items.LIGHT_BLUE_SHULKER_BOX ||
                stack.getItem() == Items.YELLOW_SHULKER_BOX ||
                stack.getItem() == Items.LIME_SHULKER_BOX ||
                stack.getItem() == Items.PINK_SHULKER_BOX ||
                stack.getItem() == Items.GRAY_SHULKER_BOX ||
                stack.getItem() == Items.LIGHT_GRAY_SHULKER_BOX ||
                stack.getItem() == Items.CYAN_SHULKER_BOX ||
                stack.getItem() == Items.PURPLE_SHULKER_BOX ||
                stack.getItem() == Items.BLUE_SHULKER_BOX ||
                stack.getItem() == Items.BROWN_SHULKER_BOX ||
                stack.getItem() == Items.GREEN_SHULKER_BOX ||
                stack.getItem() == Items.RED_SHULKER_BOX ||
                stack.getItem() == Items.BLACK_SHULKER_BOX;
    }
    private void spamBookAndQuill(MinecraftClient mc) {
        ItemStack bookAndQuill = mc.player.getStackInHand(Hand.MAIN_HAND);

        if (bookAndQuill.getItem() == Items.WRITABLE_BOOK) {
            String title = "111111111111111111111111111111111111111111111111111111111111111111" + bookCount;

            // Create a list of pages
            NbtList pages = new NbtList();
            pages.add(NbtString.of("i".repeat(50))); // Example page content

            // Create and populate book NBT data
            NbtCompound bookNbt = new NbtCompound();
            bookNbt.put("pages", pages);
            bookNbt.putString("title", title);
            bookNbt.putString("author", mc.player.getGameProfile().getName());

            // Update the book with new data
            bookAndQuill.setSubNbt("tag", bookNbt);

            // Convert NbtList to List<String>
            List<String> pageList = pages.stream()
                    .map(nbt -> nbt.asString())
                    .collect(Collectors.toList());

            // Send book update packet to the server
            mc.player.networkHandler.sendPacket(new BookUpdateC2SPacket(
                    mc.player.getInventory().selectedSlot, // The slot of the book in the inventory
                    pageList, // Convert NbtList to List<String>
                    Optional.of(title) // The title of the book
            ));

            bookCount++;
        }
    }

}
